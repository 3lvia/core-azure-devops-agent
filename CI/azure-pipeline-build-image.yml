schedules:
- cron: "0 1 * * 1"
  displayName: At 01:00 on Monday
  branches:
    include:
    - trunk
  always: true

trigger: none

# pool: elvia-hosted-agent-dev

pool:
  vmImage: "ubuntu-latest"

stages:
- stage: BuildProd
  variables: 
  - group: sp-terraform-core-prod
  jobs:
  - job:
    timeoutInMinutes: 360
    steps:
      - checkout: self
        submodules: recursive  
        persistCredentials: true
      - script: |
          git config --local user.name "Azure Pipelines Core"
          git config --local user.email "azuredevops@elvia.no"
          git submodule update --remote --merge
          git commit -a -m "git submodule update remote merge"
          git push origin HEAD:trunk
        displayName: update submodule
      - script: |
          rand=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 13 ; echo '')
          echo "##vso[task.setvariable variable=imagename]azure-devops-pipeline-agent-$rand"
        displayName: Generate random image name
      - script: |
          echo "image name: $(imagename)"
      # - script: |
      #     echo "image name: $(imagename)"
      #     cat submodules/virtual-environments/images/linux/ubuntu2004.json | jq '.builders[0] += {"managed_image_resource_group_name": "CORE-RGprod","managed_image_name": "$(imagename)"}'|jq 'del(.builders[0].resource_group_name,.builders[0].storage_account,.builders[0].capture_container_name,.builders[0].capture_name_prefix)' > submodules/virtual-environments/images/linux/ubuntu_replaced.json
      #   displayName: Update packer template
        # update packer template to create a managed image instead of a vdh-file
      - script: |
          packer init submodules/virtual-environments/images/ubuntu/templates/ubuntu-22.04.pkr.hcl
          packer build -var managed_image_name=$(imagename) submodules/virtual-environments/images/ubuntu/templates/ubuntu-22.04.pkr.hcl
        displayName: Packer build
        env: 
          ARM_CLIENT_ID: 526cb446-977d-4db5-b110-40dc065ff64b # sp-terraform-core-prod
          ARM_CLIENT_SECRET: $(client_secret)
          ARM_SUBSCRIPTION_ID: 6cd117f2-adb1-452e-a60e-86131c1f11d4 # core
          ARM_TENANT_ID: 2186a6ec-c227-4291-9806-d95340bf439d
          ARM_RESOURCE_GROUP: CORE-RGprod
          ARM_STORAGE_ACCOUNT: elviacoreprod
          ARM_RESOURCE_LOCATION: westeurope
          TERRAFORM_CLOUD_AGENT_TOKEN: $(TERRAFORM_CLOUD_AGENT_TOKEN)
      - task: AzureCLI@2.198.0
        displayName: Update VM scale set with new image
        inputs:
          azureSubscription: azurerm-core
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            az vmss update --resource-group CORE-RGprod --name pipelineagent-vmss-prod --set virtualMachineProfile.storageProfile.imageReference.id=subscriptions/6cd117f2-adb1-452e-a60e-86131c1f11d4/resourceGroups/CORE-RGprod/providers/Microsoft.Compute/images/$(imagename)
      - task: AzureCLI@2.198.0
        displayName: Delete old image resources
        inputs:
          azureSubscription: azurerm-core
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            images=$(az image list)
            for key in $(jq -r '.|keys|.[]' <<< $images) 
            do 
              row=$(jq -r ".[$key]" <<< $images)
              # id=$(jq -r ".id" <<< $row)
              name=$(jq -r ".name" <<< $row)
              if [ $name == "azure-devops-pipeline-agent" ] || [ $name == $(imagename) ]
              then
                continue
              fi
              # echo "id: $id"
              echo "name: $name"
              az image delete -g CORE-RGprod -n $name
            done
